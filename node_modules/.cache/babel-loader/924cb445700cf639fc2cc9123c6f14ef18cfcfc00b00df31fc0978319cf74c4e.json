{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jagadeesh\\\\Desktop\\\\myrapp\\\\src\\\\useMemo\\\\useMemo.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseMemo = () => {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Define a function that will be memoized\n  const calculateExpensiveValue = input => {\n    console.log(\"Calculating expensive value...\");\n    // Simulate an expensive calculation\n    let result = input * 10;\n    return result;\n  };\n\n  // useMemo will store the result of the calculateExpensiveValue function\n  // and only recompute it if the count state changes.\n  const memoizedValue = useMemo(() => calculateExpensiveValue(count), [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"hint\",\n      children: \" Use Memo example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Memoized Value: \", memoizedValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"Increment Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExampleComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(UseMemo, \"1DmFvjsurZ2AM9INUkt0G7fDpXU=\");\n_c = UseMemo;\nexport default UseMemo;\nexport const ExampleComponent = () => {\n  _s2();\n  const [data, setData] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  // Simulate fetching and processing data (this could be an API call, for example)\n  const fetchData = () => {\n    console.log(\"Fetching data...\");\n    // Simulate an API call or data processing\n    return ['apple', 'banana', 'orange', 'grape', 'mango'];\n  };\n\n  // Memoized data processing function\n  const filteredData = useMemo(() => {\n    console.log(\"Filtering data...\");\n    // Simulate filtering based on the current filter value\n    return data.filter(item => item.includes(filter));\n  }, [data, filter]);\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n  const handleFetchData = () => {\n    setData(fetchData());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useMemo Hook Example with Data Filtering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFetchData,\n      children: \"Fetch Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: filter,\n      onChange: handleFilterChange,\n      placeholder: \"Filter data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s2(ExampleComponent, \"hPBIsTXleqAi+HT+boHKoZ/1vcI=\");\n_c2 = ExampleComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"UseMemo\");\n$RefreshReg$(_c2, \"ExampleComponent\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","UseMemo","_s","count","setCount","calculateExpensiveValue","input","console","log","result","memoizedValue","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ExampleComponent","_c","_s2","data","setData","filter","setFilter","fetchData","filteredData","item","includes","handleFilterChange","event","target","value","handleFetchData","type","onChange","placeholder","map","index","_c2","$RefreshReg$"],"sources":["C:/Users/Jagadeesh/Desktop/myrapp/src/useMemo/useMemo.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState, useMemo } from 'react';\r\n\r\n\r\nconst UseMemo = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  // Define a function that will be memoized\r\n  const calculateExpensiveValue = (input) => {\r\n    console.log(\"Calculating expensive value...\");\r\n    // Simulate an expensive calculation\r\n    let result = input * 10;\r\n    return result;\r\n  };\r\n\r\n  // useMemo will store the result of the calculateExpensiveValue function\r\n  // and only recompute it if the count state changes.\r\n  const memoizedValue = useMemo(() => calculateExpensiveValue(count), [count]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='hint'> Use Memo example</h1>\r\n      <div>\r\n        <p>Count: {count}</p>\r\n        <p>Memoized Value: {memoizedValue}</p>\r\n        <button onClick={() => setCount(count + 1)}>Increment Count</button>\r\n      </div>\r\n      <ExampleComponent/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UseMemo\r\n\r\nexport const ExampleComponent = () => {\r\n  const [data, setData] = useState([]);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  // Simulate fetching and processing data (this could be an API call, for example)\r\n  const fetchData = () => {\r\n    console.log(\"Fetching data...\");\r\n    // Simulate an API call or data processing\r\n    return ['apple', 'banana', 'orange', 'grape', 'mango'];\r\n  };\r\n\r\n  // Memoized data processing function\r\n  const filteredData = useMemo(() => {\r\n    console.log(\"Filtering data...\");\r\n    // Simulate filtering based on the current filter value\r\n    return data.filter(item => item.includes(filter));\r\n  }, [data, filter]);\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const handleFetchData = () => {\r\n    setData(fetchData());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>useMemo Hook Example with Data Filtering</h1>\r\n      <button onClick={handleFetchData}>Fetch Data</button>\r\n      <br />\r\n      <input type=\"text\" value={filter} onChange={handleFilterChange} placeholder=\"Filter data\" />\r\n      <ul>\r\n        {filteredData.map((item, index) => (\r\n          <li key={index}>{item}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}