{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jagadeesh\\\\Desktop\\\\myrapp\\\\src\\\\useMemo\\\\useMemo.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseMemo = () => {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Define a function that will be memoized\n  const calculateExpensiveValue = input => {\n    console.log(\"Calculating expensive value...\");\n    // Simulate an expensive calculation\n    let result = input * 10;\n    return result;\n  };\n\n  // useMemo will store the result of the calculateExpensiveValue function\n  // and only recompute it if the count state changes.\n  const memoizedValue = useMemo(() => calculateExpensiveValue(count), [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"hint\",\n      children: \" Use Memo example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Memoized Value: \", memoizedValue]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCount(count + 1),\n        children: \"Increment Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(UseMemo, \"1DmFvjsurZ2AM9INUkt0G7fDpXU=\");\n_c = UseMemo;\nexport default UseMemo;\nvar _c;\n$RefreshReg$(_c, \"UseMemo\");","map":{"version":3,"names":["React","useState","useMemo","jsxDEV","_jsxDEV","UseMemo","_s","count","setCount","calculateExpensiveValue","input","console","log","result","memoizedValue","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jagadeesh/Desktop/myrapp/src/useMemo/useMemo.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState, useMemo } from 'react';\r\n\r\n\r\nconst UseMemo = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  // Define a function that will be memoized\r\n  const calculateExpensiveValue = (input) => {\r\n    console.log(\"Calculating expensive value...\");\r\n    // Simulate an expensive calculation\r\n    let result = input * 10;\r\n    return result;\r\n  };\r\n\r\n  // useMemo will store the result of the calculateExpensiveValue function\r\n  // and only recompute it if the count state changes.\r\n  const memoizedValue = useMemo(() => calculateExpensiveValue(count), [count]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='hint'> Use Memo example</h1>\r\n      <div>\r\n        <p>Count: {count}</p>\r\n        <p>Memoized Value: {memoizedValue}</p>\r\n        <button onClick={() => setCount(count + 1)}>Increment Count</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UseMemo\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;;EAErC;EACA,MAAMQ,uBAAuB,GAAIC,KAAK,IAAK;IACzCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7C;IACA,IAAIC,MAAM,GAAGH,KAAK,GAAG,EAAE;IACvB,OAAOG,MAAM;EACf,CAAC;;EAED;EACA;EACA,MAAMC,aAAa,GAAGZ,OAAO,CAAC,MAAMO,uBAAuB,CAACF,KAAK,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAE5E,oBACEH,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAIY,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC3ChB,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,GAAG,SAAO,EAACR,KAAK;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACrBhB,OAAA;QAAAW,QAAA,GAAG,kBAAgB,EAACD,aAAa;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtChB,OAAA;QAAQiB,OAAO,EAAEA,CAAA,KAAMb,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;QAAAQ,QAAA,EAAC;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAAd,EAAA,CAzBKD,OAAO;AAAAiB,EAAA,GAAPjB,OAAO;AA2Bb,eAAeA,OAAO;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}