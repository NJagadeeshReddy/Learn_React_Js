{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jagadeesh\\\\Desktop\\\\myrapp\\\\src\\\\Redux\\\\abc.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n\n// const abc = () => {\n//     let [count ,setCount]=useState(0)\n//     let [bool ,setBool]=useState(true)\n//     let handle =()=>{\n//         setBool(!bool)\n//         setCount(state+1)\n//     }\n//   return (\n//     <div>\n//       <h1>{count}</h1>\n//       <button onClick={handle}>{bool?\"increment\":\"clicked\"}</button>\n//       <button>decrement</button>\n//     </div>\n//   )\n// }\n\n// export default abc\n\nimport React, { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Abc = () => {\n  _s();\n  let [state, dispatch] = useReducer(reducer, {\n    count: 0,\n    bool: true\n  });\n  function reducer(state, action) {\n    switch (action.type) {\n      case \"incr\":\n        return {\n          count: state.count + 1,\n          bool: !state.bool\n        };\n      case \"decr\":\n        return {\n          count: state.count - 1,\n          bool: state.bool\n        };\n      default:\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"hint\",\n      children: \"Incement and Decrement using Redux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: state.count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"incr\"\n      }),\n      children: state.bool ? \"increment\" : \"clicked\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: \"decr\"\n      }),\n      children: \"decrement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Abc, \"JYVSaXwX3t/xNWF7ZXIqN3JYTqw=\");\n_c = Abc;\nexport default Abc;\nvar _c;\n$RefreshReg$(_c, \"Abc\");","map":{"version":3,"names":["React","useReducer","jsxDEV","_jsxDEV","Abc","_s","state","dispatch","reducer","count","bool","action","type","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jagadeesh/Desktop/myrapp/src/Redux/abc.jsx"],"sourcesContent":["// import React, { useState } from 'react'\r\n\r\n// const abc = () => {\r\n//     let [count ,setCount]=useState(0)\r\n//     let [bool ,setBool]=useState(true)\r\n//     let handle =()=>{\r\n//         setBool(!bool)\r\n//         setCount(state+1)\r\n//     }\r\n//   return (\r\n//     <div>\r\n//       <h1>{count}</h1>\r\n//       <button onClick={handle}>{bool?\"increment\":\"clicked\"}</button>\r\n//       <button>decrement</button>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default abc\r\n\r\nimport React, { useReducer } from 'react'\r\n\r\nconst Abc = () => {\r\n  let [state, dispatch] = useReducer(reducer, { count: 0, bool: true })\r\n  function reducer(state, action) {\r\n    switch (action.type) {\r\n      case \"incr\": return { count: state.count + 1, bool: !state.bool }\r\n      case \"decr\": return { count: state.count - 1, bool: state.bool }\r\n      default:\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <h1 className='hint'>Incement and Decrement using Redux</h1>\r\n      <h1>{state.count}</h1>\r\n      <button onClick={() => dispatch({ type: \"incr\" })}>{state.bool ? \"increment\" : \"clicked\"}</button>\r\n      <button onClick={() => dispatch({ type: \"decr\" })}>decrement</button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Abc\r\n\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,UAAU,CAACO,OAAO,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,CAAC;EACrE,SAASF,OAAOA,CAACF,KAAK,EAAEK,MAAM,EAAE;IAC9B,QAAQA,MAAM,CAACC,IAAI;MACjB,KAAK,MAAM;QAAE,OAAO;UAAEH,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAG,CAAC;UAAEC,IAAI,EAAE,CAACJ,KAAK,CAACI;QAAK,CAAC;MACjE,KAAK,MAAM;QAAE,OAAO;UAAED,KAAK,EAAEH,KAAK,CAACG,KAAK,GAAG,CAAC;UAAEC,IAAI,EAAEJ,KAAK,CAACI;QAAK,CAAC;MAChE;IAAQ;EAEZ;EACA,oBACEP,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAIW,SAAS,EAAC,MAAM;MAAAD,QAAA,EAAC;IAAkC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC5Df,OAAA;MAAAU,QAAA,EAAKP,KAAK,CAACG;IAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACtBf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAC;QAAEK,IAAI,EAAE;MAAO,CAAC,CAAE;MAAAC,QAAA,EAAEP,KAAK,CAACI,IAAI,GAAG,WAAW,GAAG;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAU,eAClGf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAMZ,QAAQ,CAAC;QAAEK,IAAI,EAAE;MAAO,CAAC,CAAE;MAAAC,QAAA,EAAC;IAAS;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEjE;AAEV,CAAC;AAAAb,EAAA,CAlBKD,GAAG;AAAAgB,EAAA,GAAHhB,GAAG;AAoBT,eAAeA,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}