{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jagadeesh\\\\Desktop\\\\myrapp\\\\src\\\\useCallBack\\\\UseCallBack.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// The useCallback hook is used to memoize a function, \n// similar to useMemo, but specifically designed for functions. \n// It helps prevent unnecessary re-creation of functions, \n// which can be beneficial when passing callbacks as props to child components, \n// as it ensures child components don't unnecessarily re-render.\nimport React, { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UseCallBack = () => {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Define a function that will be memoized using useCallback\n  const handleIncrement = useCallback(() => {\n    setCount(prevCount => prevCount + 1);\n  }, []); // Empty dependency array means the function is created once and never re-created.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"useCallback Hook Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Count: \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncrement,\n      children: \"Increment Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(UseCallBack, \"XtZ8NnWMNEDUOgTWy1MD+Yg3AqU=\");\n_c = UseCallBack;\nexport default UseCallBack;\nconst TodoL = () => {\n  _s2();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n\n  // Add a new todo item to the list\n  const addTodo = useCallback(() => {\n    if (newTodo.trim() !== '') {\n      setTodos(prevTodos => [...prevTodos, newTodo]);\n      setNewTodo('');\n    }\n  }, [newTodo]);\n\n  // Remove a todo item from the list\n  const removeTodo = useCallback(index => {\n    setTodos(prevTodos => prevTodos.filter((_, i) => i !== index));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Enter new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTodo(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s2(TodoL, \"l1GhBrrBpWWyjPYBc4Avnzar4gk=\");\n_c2 = TodoL;\nvar _c, _c2;\n$RefreshReg$(_c, \"UseCallBack\");\n$RefreshReg$(_c2, \"TodoL\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","UseCallBack","_s","count","setCount","handleIncrement","prevCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","TodoL","_s2","todos","setTodos","newTodo","setNewTodo","addTodo","trim","prevTodos","removeTodo","index","filter","_","i","type","value","onChange","e","target","placeholder","map","todo","_c2","$RefreshReg$"],"sources":["C:/Users/Jagadeesh/Desktop/myrapp/src/useCallBack/UseCallBack.jsx"],"sourcesContent":["// The useCallback hook is used to memoize a function, \r\n// similar to useMemo, but specifically designed for functions. \r\n// It helps prevent unnecessary re-creation of functions, \r\n// which can be beneficial when passing callbacks as props to child components, \r\n// as it ensures child components don't unnecessarily re-render.\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nconst UseCallBack = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  // Define a function that will be memoized using useCallback\r\n  const handleIncrement = useCallback(() => {\r\n    setCount(prevCount => prevCount + 1);\r\n  }, []); // Empty dependency array means the function is created once and never re-created.\r\n\r\n  return (\r\n    <div>\r\n      <h1>useCallback Hook Example</h1>\r\n      <p>Count: {count}</p>\r\n      {/* We pass the memoized function as a callback to the button onClick */}\r\n      <button onClick={handleIncrement}>Increment Count</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UseCallBack;\r\n\r\n\r\n\r\nconst TodoL = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  // Add a new todo item to the list\r\n  const addTodo = useCallback(() => {\r\n    if (newTodo.trim() !== '') {\r\n      setTodos(prevTodos => [...prevTodos, newTodo]);\r\n      setNewTodo('');\r\n    }\r\n  }, [newTodo]);\r\n\r\n  // Remove a todo item from the list\r\n  const removeTodo = useCallback((index) => {\r\n    setTodos(prevTodos => prevTodos.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={(e) => setNewTodo(e.target.value)}\r\n        placeholder=\"Enter new todo\"\r\n      />\r\n      <button onClick={addTodo}>Add Todo</button>\r\n      <ul>\r\n        {todos.map((todo, index) => (\r\n          <li key={index}>\r\n            {todo} <button onClick={() => removeTodo(index)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}