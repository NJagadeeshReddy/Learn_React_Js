{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jagadeesh\\\\Desktop\\\\myrapp\\\\src\\\\useCallBack\\\\UseCallBack.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// The useCallback hook is used to memoize a function, \n// similar to useMemo, but specifically designed for functions. \n// It helps prevent unnecessary re-creation of functions, \n// which can be beneficial when passing callbacks as props to child components, \n// as it ensures child components don't unnecessarily re-render.\nimport React, { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UseCallBack = () => {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Define a function that will be memoized using useCallback\n  const handleIncrement = useCallback(() => {\n    setCount(prevCount => prevCount + 1);\n  }, []); // Empty dependency array means the function is created once and never re-created.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"useCallback Hook Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleIncrement,\n        children: \"Increment Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(UseCallBack, \"XtZ8NnWMNEDUOgTWy1MD+Yg3AqU=\");\n_c = UseCallBack;\nexport default UseCallBack;\nconst TodoList = () => {\n  _s2();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n\n  // Add a new todo item to the list\n  const addTodo = useCallback(() => {\n    if (newTodo.trim() !== '') {\n      setTodos(prevTodos => [...prevTodos, newTodo]);\n      setNewTodo('');\n    }\n  }, [newTodo]);\n\n  // Remove a todo item from the list\n  const removeTodo = useCallback(index => {\n    setTodos(prevTodos => prevTodos.filter((_, i) => i !== index));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Enter new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [todo, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTodo(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s2(TodoList, \"l1GhBrrBpWWyjPYBc4Avnzar4gk=\");\n_c2 = TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"UseCallBack\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","UseCallBack","_s","count","setCount","handleIncrement","prevCount","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","TodoList","_c","_s2","todos","setTodos","newTodo","setNewTodo","addTodo","trim","prevTodos","removeTodo","index","filter","_","i","type","value","onChange","e","target","placeholder","map","todo","_c2","$RefreshReg$"],"sources":["C:/Users/Jagadeesh/Desktop/myrapp/src/useCallBack/UseCallBack.jsx"],"sourcesContent":["// The useCallback hook is used to memoize a function, \r\n// similar to useMemo, but specifically designed for functions. \r\n// It helps prevent unnecessary re-creation of functions, \r\n// which can be beneficial when passing callbacks as props to child components, \r\n// as it ensures child components don't unnecessarily re-render.\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nconst UseCallBack = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  // Define a function that will be memoized using useCallback\r\n  const handleIncrement = useCallback(() => {\r\n    setCount(prevCount => prevCount + 1);\r\n  }, []); // Empty dependency array means the function is created once and never re-created.\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <h1>useCallback Hook Example</h1>\r\n      <p>Count: {count}</p>\r\n      {/* We pass the memoized function as a callback to the button onClick */}\r\n      <button onClick={handleIncrement}>Increment Count</button>\r\n    </div>\r\n    <div>\r\n        <TodoList/>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UseCallBack;\r\n\r\n\r\n\r\nconst TodoList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState('');\r\n\r\n  // Add a new todo item to the list\r\n  const addTodo = useCallback(() => {\r\n    if (newTodo.trim() !== '') {\r\n      setTodos(prevTodos => [...prevTodos, newTodo]);\r\n      setNewTodo('');\r\n    }\r\n  }, [newTodo]);\r\n\r\n  // Remove a todo item from the list\r\n  const removeTodo = useCallback((index) => {\r\n    setTodos(prevTodos => prevTodos.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={(e) => setNewTodo(e.target.value)}\r\n        placeholder=\"Enter new todo\"\r\n      />\r\n      <button onClick={addTodo}>Add Todo</button>\r\n      <ul>\r\n        {todos.map((todo, index) => (\r\n          <li key={index}>\r\n            {todo} <button onClick={() => removeTodo(index)}>Remove</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}