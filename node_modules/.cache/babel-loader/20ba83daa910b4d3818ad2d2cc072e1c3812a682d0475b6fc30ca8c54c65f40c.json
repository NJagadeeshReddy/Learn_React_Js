{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jagadeesh\\\\Desktop\\\\myrapp\\\\src\\\\useCallBack\\\\UseCallBack.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// The useCallback hook is used to memoize a function, \n// similar to useMemo, but specifically designed for functions. \n// It helps prevent unnecessary re-creation of functions, \n// which can be beneficial when passing callbacks as props to child components, \n// as it ensures child components don't unnecessarily re-render.\nimport React, { useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UseCallBack = () => {\n  _s();\n  const [count, setCount] = useState(0);\n\n  // Define a function that will be memoized using useCallback\n  const handleIncrement = useCallback(() => {\n    setCount(prevCount => prevCount + 1);\n  }, []); // Empty dependency array means the function is created once and never re-created.\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"hint\",\n        children: \"useCallback Hook Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Count: \", count]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleIncrement,\n        children: \"Increment Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_s(UseCallBack, \"XtZ8NnWMNEDUOgTWy1MD+Yg3AqU=\");\n_c = UseCallBack;\nexport default UseCallBack;\nconst TodoList = () => {\n  _s2();\n  const [todos, setTodos] = useState([]);\n  const [newTodo, setNewTodo] = useState('');\n  const [editIndex, setEditIndex] = useState(-1);\n\n  // Add a new todo item to the list\n  const addTodo = useCallback(() => {\n    if (newTodo.trim() !== '') {\n      if (editIndex === -1) {\n        // Adding a new todo\n        setTodos(prevTodos => [...prevTodos, newTodo]);\n      } else {\n        // Editing an existing todo\n        setTodos(prevTodos => {\n          const updatedTodos = [...prevTodos];\n          updatedTodos[editIndex] = newTodo;\n          return updatedTodos;\n        });\n        setEditIndex(-1); // Reset editIndex after edit\n      }\n\n      setNewTodo('');\n    }\n  }, [newTodo, editIndex]);\n\n  // Remove a todo item from the list\n  const removeTodo = useCallback(index => {\n    setTodos(prevTodos => prevTodos.filter((_, i) => i !== index));\n  }, []);\n\n  // Edit a todo item\n  const editTodo = useCallback(index => {\n    setEditIndex(index);\n    setNewTodo(todos[index]);\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"hint\",\n      children: \"Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      onChange: e => setNewTodo(e.target.value),\n      placeholder: \"Enter new todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTodo,\n      children: editIndex === -1 ? 'Add Todo' : 'Save Edit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"\",\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", todo, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"d\",\n          onClick: () => removeTodo(index),\n          children: \"Remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"e\",\n          onClick: () => editTodo(index),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s2(TodoList, \"KKPUFprTTmb7svUZZpJc76Djkvs=\");\n_c2 = TodoList;\nvar _c, _c2;\n$RefreshReg$(_c, \"UseCallBack\");\n$RefreshReg$(_c2, \"TodoList\");","map":{"version":3,"names":["React","useState","useCallback","jsxDEV","_jsxDEV","Fragment","_Fragment","UseCallBack","_s","count","setCount","handleIncrement","prevCount","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","TodoList","_c","_s2","todos","setTodos","newTodo","setNewTodo","editIndex","setEditIndex","addTodo","trim","prevTodos","updatedTodos","removeTodo","index","filter","_","i","editTodo","type","value","onChange","e","target","placeholder","map","todo","_c2","$RefreshReg$"],"sources":["C:/Users/Jagadeesh/Desktop/myrapp/src/useCallBack/UseCallBack.jsx"],"sourcesContent":["// The useCallback hook is used to memoize a function, \r\n// similar to useMemo, but specifically designed for functions. \r\n// It helps prevent unnecessary re-creation of functions, \r\n// which can be beneficial when passing callbacks as props to child components, \r\n// as it ensures child components don't unnecessarily re-render.\r\nimport React, { useState, useCallback } from 'react';\r\n\r\nconst UseCallBack = () => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  // Define a function that will be memoized using useCallback\r\n  const handleIncrement = useCallback(() => {\r\n    setCount(prevCount => prevCount + 1);\r\n  }, []); // Empty dependency array means the function is created once and never re-created.\r\n\r\n  return (\r\n    <>\r\n    <div>\r\n      <h1 className='hint'>useCallback Hook Example</h1>\r\n      <p>Count: {count}</p>\r\n      {/* We pass the memoized function as a callback to the button onClick */}\r\n      <button onClick={handleIncrement}>Increment Count</button>\r\n    </div>\r\n    <div>\r\n        <TodoList/>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UseCallBack;\r\n\r\n\r\n\r\n\r\nconst TodoList = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [newTodo, setNewTodo] = useState('');\r\n  const [editIndex, setEditIndex] = useState(-1);\r\n\r\n  // Add a new todo item to the list\r\n  const addTodo = useCallback(() => {\r\n    if (newTodo.trim() !== '') {\r\n      if (editIndex === -1) {\r\n        // Adding a new todo\r\n        setTodos(prevTodos => [...prevTodos, newTodo]);\r\n      } else {\r\n        // Editing an existing todo\r\n        setTodos(prevTodos => {\r\n          const updatedTodos = [...prevTodos];\r\n          updatedTodos[editIndex] = newTodo;\r\n          return updatedTodos;\r\n        });\r\n        setEditIndex(-1); // Reset editIndex after edit\r\n      }\r\n      setNewTodo('');\r\n    }\r\n  }, [newTodo, editIndex]);\r\n\r\n  // Remove a todo item from the list\r\n  const removeTodo = useCallback((index) => {\r\n    setTodos(prevTodos => prevTodos.filter((_, i) => i !== index));\r\n  }, []);\r\n\r\n  // Edit a todo item\r\n  const editTodo = useCallback((index) => {\r\n    setEditIndex(index);\r\n    setNewTodo(todos[index]);\r\n  }, [todos]);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='hint'>Todo List</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        onChange={(e) => setNewTodo(e.target.value)}\r\n        placeholder=\"Enter new todo\"\r\n      />\r\n      <button onClick={addTodo}>\r\n        {editIndex === -1 ? 'Add Todo' : 'Save Edit'}\r\n      </button>\r\n      <ul className=''>\r\n        {todos.map((todo, index) => (\r\n          <li key={index}>\r\n           {} {todo}{' '}\r\n            <button className='d' onClick={() => removeTodo(index)}>Remove</button>{' '}\r\n            <button  className='e' onClick={() => editTodo(index)}>Edit</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}